(function() {
    var type_impls = Object.fromEntries([["forge",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C'a,+Context%3CEXT,+DB%3E,+EXT,+DB%3E\" class=\"impl\"><a href=\"#impl-Handler%3C'a,+Context%3CEXT,+DB%3E,+EXT,+DB%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, EXT, DB&gt; <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"forge/revm/interpreter/primitives/db/trait.Database.html\" title=\"trait forge::revm::interpreter::primitives::db::Database\">Database</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.new\" class=\"fn\">new</a>(cfg: <a class=\"struct\" href=\"forge/revm/interpreter/primitives/struct.HandlerCfg.html\" title=\"struct forge::revm::interpreter::primitives::HandlerCfg\">HandlerCfg</a>) -&gt; <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;</h4></section></summary><div class=\"docblock\"><p>Created new Handler with given configuration.</p>\n<p>Internally it calls <code>mainnet_with_spec</code> with the given spec id.\nOr <code>optimism_with_spec</code> if the optimism feature is enabled and <code>cfg.is_optimism</code> is set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mainnet\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.mainnet\" class=\"fn\">mainnet</a>&lt;SPEC&gt;() -&gt; <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;<div class=\"where\">where\n    SPEC: <a class=\"trait\" href=\"forge/revm/interpreter/primitives/trait.Spec.html\" title=\"trait forge::revm::interpreter::primitives::Spec\">Spec</a>,</div></h4></section></summary><div class=\"docblock\"><p>Default handler for Ethereum mainnet.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_optimism\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.is_optimism\" class=\"fn\">is_optimism</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the optimism feature is enabled and flag is set to <code>true</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.optimism\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.optimism\" class=\"fn\">optimism</a>&lt;SPEC&gt;() -&gt; <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;<div class=\"where\">where\n    SPEC: <a class=\"trait\" href=\"forge/revm/interpreter/primitives/trait.Spec.html\" title=\"trait forge::revm::interpreter::primitives::Spec\">Spec</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>optimism</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Handler for optimism</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.optimism_with_spec\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.optimism_with_spec\" class=\"fn\">optimism_with_spec</a>(\n    spec_id: <a class=\"enum\" href=\"forge/revm/interpreter/primitives/enum.SpecId.html\" title=\"enum forge::revm::interpreter::primitives::SpecId\">SpecId</a>,\n) -&gt; <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>optimism</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Optimism with spec. Similar to <a href=\"forge/revm/struct.Handler.html#method.mainnet_with_spec\" title=\"associated function forge::revm::Handler::mainnet_with_spec\"><code>Self::mainnet_with_spec</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mainnet_with_spec\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.mainnet_with_spec\" class=\"fn\">mainnet_with_spec</a>(\n    spec_id: <a class=\"enum\" href=\"forge/revm/interpreter/primitives/enum.SpecId.html\" title=\"enum forge::revm::interpreter::primitives::SpecId\">SpecId</a>,\n) -&gt; <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;</h4></section></summary><div class=\"docblock\"><p>Creates handler with variable spec id, inside it will call <code>mainnet::&lt;SPEC&gt;</code> for\nappropriate spec.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cfg\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.cfg\" class=\"fn\">cfg</a>(&amp;self) -&gt; <a class=\"struct\" href=\"forge/revm/interpreter/primitives/struct.HandlerCfg.html\" title=\"struct forge::revm::interpreter::primitives::HandlerCfg\">HandlerCfg</a></h4></section></summary><div class=\"docblock\"><p>Specification ID.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.spec_id\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.spec_id\" class=\"fn\">spec_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"forge/revm/interpreter/primitives/enum.SpecId.html\" title=\"enum forge::revm::interpreter::primitives::SpecId\">SpecId</a></h4></section></summary><div class=\"docblock\"><p>Returns specification ID.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute_frame\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.execute_frame\" class=\"fn\">execute_frame</a>(\n    &amp;self,\n    frame: &amp;mut <a class=\"enum\" href=\"forge/revm/enum.Frame.html\" title=\"enum forge::revm::Frame\">Frame</a>,\n    shared_memory: &amp;mut <a class=\"struct\" href=\"forge/revm/interpreter/struct.SharedMemory.html\" title=\"struct forge::revm::interpreter::SharedMemory\">SharedMemory</a>,\n    context: &amp;mut <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"forge/revm/interpreter/enum.InterpreterAction.html\" title=\"enum forge::revm::interpreter::InterpreterAction\">InterpreterAction</a>, <a class=\"enum\" href=\"forge/revm/interpreter/primitives/enum.EVMError.html\" title=\"enum forge::revm::interpreter::primitives::EVMError\">EVMError</a>&lt;&lt;DB as <a class=\"trait\" href=\"forge/revm/interpreter/primitives/db/trait.Database.html\" title=\"trait forge::revm::interpreter::primitives::db::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"forge/revm/interpreter/primitives/db/trait.Database.html#associatedtype.Error\" title=\"type forge::revm::interpreter::primitives::db::Database::Error\">Error</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Executes call frame.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_instruction_table\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.take_instruction_table\" class=\"fn\">take_instruction_table</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"forge/revm/interpreter/opcode/enum.InstructionTables.html\" title=\"enum forge::revm::interpreter::opcode::InstructionTables\">InstructionTables</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Take instruction table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_instruction_table\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.set_instruction_table\" class=\"fn\">set_instruction_table</a>(\n    &amp;mut self,\n    table: <a class=\"enum\" href=\"forge/revm/interpreter/opcode/enum.InstructionTables.html\" title=\"enum forge::revm::interpreter::opcode::InstructionTables\">InstructionTables</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Set instruction table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_execution\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.pre_execution\" class=\"fn\">pre_execution</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"forge/revm/handler/struct.PreExecutionHandler.html\" title=\"struct forge::revm::handler::PreExecutionHandler\">PreExecutionHandler</a>&lt;'a, EXT, DB&gt;</h4></section></summary><div class=\"docblock\"><p>Returns reference to pre execution handler.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_execution\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.post_execution\" class=\"fn\">post_execution</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"forge/revm/handler/struct.PostExecutionHandler.html\" title=\"struct forge::revm::handler::PostExecutionHandler\">PostExecutionHandler</a>&lt;'a, EXT, DB&gt;</h4></section></summary><div class=\"docblock\"><p>Returns reference to pre execution handler.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execution\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.execution\" class=\"fn\">execution</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"forge/revm/handler/struct.ExecutionHandler.html\" title=\"struct forge::revm::handler::ExecutionHandler\">ExecutionHandler</a>&lt;'a, EXT, DB&gt;</h4></section></summary><div class=\"docblock\"><p>Returns reference to frame handler.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validation\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.validation\" class=\"fn\">validation</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"forge/revm/handler/struct.ValidationHandler.html\" title=\"struct forge::revm::handler::ValidationHandler\">ValidationHandler</a>&lt;'a, EXT, DB&gt;</h4></section></summary><div class=\"docblock\"><p>Returns reference to validation handler.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_handler_register\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.append_handler_register\" class=\"fn\">append_handler_register</a>(\n    &amp;mut self,\n    register: <a class=\"enum\" href=\"forge/revm/handler/register/enum.HandleRegisters.html\" title=\"enum forge::revm::handler::register::HandleRegisters\">HandleRegisters</a>&lt;'a, EXT, DB&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Append handle register.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_handler_register_plain\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.append_handler_register_plain\" class=\"fn\">append_handler_register_plain</a>(\n    &amp;mut self,\n    register: for&lt;'a&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: &amp;mut <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;),\n)</h4></section></summary><div class=\"docblock\"><p>Append plain handle register.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_handler_register_box\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.append_handler_register_box\" class=\"fn\">append_handler_register_box</a>(\n    &amp;mut self,\n    register: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn for&lt;'e&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;mut <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'e, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;) + 'a&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Append boxed handle register.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_handle_register\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.pop_handle_register\" class=\"fn\">pop_handle_register</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"forge/revm/handler/register/enum.HandleRegisters.html\" title=\"enum forge::revm::handler::register::HandleRegisters\">HandleRegisters</a>&lt;'a, EXT, DB&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Pop last handle register and reapply all registers that are left.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_handle_generic\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.create_handle_generic\" class=\"fn\">create_handle_generic</a>&lt;SPEC&gt;(\n    &amp;mut self,\n) -&gt; <a class=\"struct\" href=\"forge/revm/struct.Handler.html\" title=\"struct forge::revm::Handler\">Handler</a>&lt;'a, <a class=\"struct\" href=\"forge/revm/struct.Context.html\" title=\"struct forge::revm::Context\">Context</a>&lt;EXT, DB&gt;, EXT, DB&gt;<div class=\"where\">where\n    SPEC: <a class=\"trait\" href=\"forge/revm/interpreter/primitives/trait.Spec.html\" title=\"trait forge::revm::interpreter::primitives::Spec\">Spec</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates the Handler with Generic Spec.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.modify_spec_id\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"forge/revm/struct.Handler.html#tymethod.modify_spec_id\" class=\"fn\">modify_spec_id</a>(&amp;mut self, spec_id: <a class=\"enum\" href=\"forge/revm/interpreter/primitives/enum.SpecId.html\" title=\"enum forge::revm::interpreter::primitives::SpecId\">SpecId</a>)</h4></section></summary><div class=\"docblock\"><p>Creates the Handler with variable SpecId, inside it will call function with Generic Spec.</p>\n</div></details></div></details>",0,"forge::revm::handler::register::EvmHandler"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16814]}